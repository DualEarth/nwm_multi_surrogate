run_dir: runs/my_camels_run
experiment_name: lstm_camels_custom
model: cudalstm
trainer:
  module: my_custom_trainer
  class: CustomTrainer
  save_internal_states: True
  reduced_state_dimension: 3

save_timeseries_states: True
save_internal_states: True
head: regression
output_activation: linear

dev_mode: True

# files to specify training, validation and test basins (relative to code root or absolute path)
train_basin_file: C:/Users/deonf/Model_work/data/CAMELS_US/camel_train_basins.txt
validation_basin_file: C:/Users/deonf/Model_work/data/CAMELS_US/camel_valid_basins.txt
test_basin_file: C:/Users/deonf/Model_work/data/CAMELS_US/camel_test_basins.txt

# training, validation and test time periods (format = 'dd/mm/yyyy')
train_start_date: "01/10/1999"
train_end_date: "30/09/2008"
#validation_start_date: "01/10/1980"
#validation_end_date: "30/09/1989"
test_start_date: "01/10/1989"
test_end_date: "30/09/1999"

# which GPU (id) to use [in format of cuda:0, cuda:1 etc, or cpu, mps or None]
device: cuda:0

# --- Validation configuration ---------------------------------------------------------------------

# specify after how many epochs to perform validation
#validate_every: 1

# specify how many random basins to use for validation
#validate_n_random_basins: 1

# specify which metrics to calculate during validation (see neuralhydrology.evaluation.metrics)
# this can either be a list or a dictionary. If a dictionary is used, the inner keys must match the name of the
# target_variable specified below. Using dicts allows for different metrics per target variable.
metrics:
  - NSE
  - RMSE
# ----> General settings <----

# Number of cell states of the LSTM
hidden_size: 256

# Initial bias value of the forget gate
initial_forget_bias: 3

# Dropout applied to the output of the LSTM
output_dropout: 0.4

# --- Training configuration -----------------------------------------------------------------------

# specify optimizer [Adam]
optimizer: Adam

# specify loss [MSE, NSE, RMSE]
loss: rmse

# specify learning rates to use starting at specific epochs (0 is the initial learning rate)
learning_rate:
 0: 1e-4
# Mini-batch size
batch_size: 256

# Number of training epochs
epochs: 30

# If a value, clips the gradients during training to that norm.
clip_gradient_norm: 1

# Defines which time steps are used to calculate the loss. Can't be larger than seq_length.
# If use_frequencies is used, this needs to be a dict mapping each frequency to a predict_last_n-value, else an int.
predict_last_n: 1

# Length of the input sequence
# If use_frequencies is used, this needs to be a dict mapping each frequency to a seq_length, else an int.
seq_length: 365

# Number of parallel workers used in the data pipeline
num_workers: 0

# Log the training loss every n steps
log_interval: 5

# If true, writes logging results into tensorboard file
log_tensorboard: True

# If a value and greater than 0, logs n random basins as figures during validation
log_n_figures: 1

# Save model weights every n epochs
save_weights_every: 1

# --- Data configurations --------------------------------------------------------------------------

# which data set to use [camels_us, camels_gb, global, hourly_camels_us]
dataset: camels_us

# Path to data set root
data_dir: C:/Users/deonf/Model_work/data/CAMELS_US

# Forcing product [daymet, maurer, maurer_extended, nldas, nldas_extended, nldas_hourly]
# can be either a list of forcings or a single forcing product
forcings:
  #- maurer
  - daymet
  - nldas

dynamic_inputs:
  - PRCP(mm/day)_nldas
  #- PRCP(mm/day)_maurer
  - prcp(mm/day)_daymet
  - srad(W/m2)_daymet
  - tmax(C)_daymet
  - tmin(C)_daymet
  - vp(Pa)_daymet

# which columns to use as target
target_variables:
  - QObs(mm/d)

# clip negative predictions to zero for all variables listed below. Should be a list, even for single variables.
clip_targets_to_zero:
  - QObs(mm/d)
  
static_attributes:
- elev_mean
- slope_mean
- area_gages2
- frac_forest
- lai_max
- lai_diff
- gvf_max
- gvf_diff
- soil_depth_pelletier
- soil_depth_statsgo
- soil_porosity
- soil_conductivity
- max_water_content
- sand_frac
- silt_frac
- clay_frac
- carbonate_rocks_frac
- geol_permeability
- p_mean
- pet_mean
- aridity
- frac_snow
- high_prec_freq
- high_prec_dur
- low_prec_freq
- low_prec_dur

#set PYTHONPATH=C:\Users\deonf\Model_work\data\CAMELS_US
#set KMP_DUPLICATE_LIB_OK=TRUE
#python C:\Users\deonf\anaconda3\Lib\site-packages\neuralhydrology\nh_run.py train --config-file runoff.yml
